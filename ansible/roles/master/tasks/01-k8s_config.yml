---

# Firewall access
- name: Access port 6443
  firewalld:
    permanent: yes
    port: '{{ item }}'
    state: enabled
  with_items:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250/tcp
    - 10251/tcp
    - 10252/tcp
    - 10255/tcp
  notify:
    - Reload Firewall
  tags:
    - k8s-master

# Configure kubeadm
- name: Kubeadmn config
  command: kubeadm config images pull
  tags:
    - k8s-master

# Firewall rich rules
- name: Accept workers access
  firewalld:
    rich_rule: rule family=ipv4 source address='{{ item }}' accept
    permanent: yes
    immediate: yes
    state: enabled
  with_items:
    - 192.168.1.111/32
  tags:
    - k8s-master

- name: Accept docker access
  firewalld:
    rich_rule: rule family=ipv4 source address=172.17.0.0/16 accept
    permanent: yes
    immediate: yes
    zone: public
    state: enabled
  notify:
    - Reload Firewall
  tags:
    - k8s-master

# Create PODs network
- name: Pods network
  command: kubeadm init --pod-network-cidr 192.168.0.0/16
  tags:
    - k8s-master

# Allow cluster access
- name: Create file
  file:
    path: /home/ansible/.kube
    state: directory
  tags:
    - k8s-master

- name: Enable access
  copy:
    src: "/etc/kubernetes/admin.conf"
    dest: "/home/ansible/.kube/config"
    owner: ansible
    group: ansible
    mode: 0600
    remote_src: yes
  tags:
    - k8s-master

# Create kubeadm token for workers
- name: Create token
  command: kubeadm token create --print-join-command
  register: output
  tags:
    - k8s-master

- name: add to workers vars
  lineinfile:
    path: "group_vars/workers.yml"
    line: 'join_command: {{ output.stdout }}'
    state: present
  become: no
  delegate_to: localhost
  tags:
    - k8s-master
